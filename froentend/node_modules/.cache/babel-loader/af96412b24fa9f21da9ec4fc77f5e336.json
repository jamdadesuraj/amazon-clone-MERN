{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_profile_REQUEST } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headears: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headears: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const pdateUserProfile = user => (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_profile_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n  } catch (error) {}\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_profile_REQUEST","axios","login","email","password","dispatch","type","config","headears","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","headers","Authorization","token","get","pdateUserProfile","user","logout","removeItem"],"sources":["C:/Users/Admin/Desktop/shop/froentend/src/redux/actions/userAction.js"],"sourcesContent":["import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_profile_REQUEST,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = { headears: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n    const config = { headears: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Contnet-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const pdateUserProfile = (user) => (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_profile_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}